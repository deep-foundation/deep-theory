/-
  Определения Теории связей в терминах Теории множеств:

1. Идентификатор вектора - уникальный идентификатор, каждый из которых связан с определенным вектором.
  Последовательность идентификаторов векторов: L ⊆ ℕ₀.

2. Вектор идентификаторов: это вектор, состоящий из нуля или нескольких идентификаторов векторов,
  где количество индексов соответствует количеству элементов вектора.
  Множество всех векторов идентификаторов длины n ∈ ℕ₀: Vn = Lⁿ.
  Декартова степень Lⁿ всегда даст вектор длины n, так как все его компоненты будут одного и того же типа L.
  Другими словами, Lⁿ представляет собой множество всех возможных n-элементных векторов, где каждый элемент вектора принадлежит множеству L.

3. Ассоциация - это упорядоченная пара, состоящая из идентификатора вектора и вектора идентификаторов.
  Эта структура служит для отображения между идентификаторами и векторами или точками в пространстве.
  Множество всех ассоциаций: A = L × Vn.

4. Семейство функций: ∪_f {anetvⁿ | n ∈ ℕ₀} ⊆ A.
  Здесь ∪ обозначает объединение всех функций в семействе {anetvⁿ},
  ⊆ обозначает 'это подмножество', а A - множество всех ассоциаций.
  Это говорит о том, что все упорядоченные пары, полученные от функций anetvⁿ, являются подмножеством A.

5. Ассоциативная сеть векторов длины n (или n-мерная асеть) из семейства функций {anetvⁿ},
  anetvⁿ : L → Vn отображает идентификатор l из множества L в кортеж идентификаторов длины n,
  который принадлежит множеству Vn, фактически идентифицирует точки в n-мерном пространстве.
  'n' в anetvⁿ указывает на то, что функция возвращает вектора, содержащие n идентификаторов.


6. Дуплет идентификаторов (упорядоченная пара или двухмерный вектор): D = L²
  Это множество всех упорядоченных пар (L, L), или вторая декартова степень L.

7. Ассоциативная сеть дуплетов (или двумерная асеть): anetd : L → L².

8. Пустой вектор представлен пустым множеством: () представлено как ∅.
  Вектор длины n ∈ ℕ₀ можно представить как вложенные упорядоченные пары.

9. Ассоциативная сеть вложенных упорядоченных пар: anetl : L → NP,
  где NP = {(∅,∅) | (l,np), l ∈ L, np ∈ NP} - это множество вложенных упорядоченных пар,
  которое состоит из пустых пар, и пар содержащих один или более элементов.

  Про ФБО:

1. Функция агрегирования в ТМ (теории множеств) - это правило или процедура, которая каждому конкретному элементу сопоставляет определённое множество.
2. В теории множеств, БО (бинарное отношение) можно рассматривать как подмножество ПП (прямого произведения) двух множеств.
    Таким образом, УП (упорядоченные пары), составляющие это бинарное отношение, являются элементами множества, описывающего данное отношение.
3. Сопоставление элемента к соответствующему множеству в рамках функции агрегирования можно представить в виде упорядоченной пары (элемент, множество).
    Таким образом, функция агрегирования может быть представлена как функциональное бинарное отношение,
    где каждая упорядоченная пара уникально сопоставляет элемент и его агрегированное множество.
4. Если мы имеем несколько функций агрегирования, каждую из которых определяется своим функциональным бинарным отношением,
    то один и тот же элемент может быть сопоставлен разным множествам в рамках разных функций агрегирования.
5. Исходя из предыдущих утверждений, упорядоченная пара (элемент, множество) может быть рассматриваема как элемент в контексте функции агрегирования.
   Сама функция агрегирования, представляющая набор таких упорядоченных пар, может быть рассматриваема как множество.
   Таким образом, функцию агрегирования можно описать и интерпретировать как специфическое множество в рамках теории множеств.
6. Исходя из определения функции агрегирования как множества упорядоченных пар, каждое такое множество можно интерпретировать как функцию агрегирования,
    где каждый элемент этого множества является упорядоченной парой (элемент, множество). Далее, каждая такая упорядоченная пара интерпретируется как элемент.
    Это утверждение отражает, что в контексте теории множеств, функции и элементы можно интерпретировать в рамках друг друга.
-/

import data.list
import data.vector

-- Последовательность идентификаторов векторов: L ⊆ ℕ₀
def L := nat

-- Дефолтное значение L: ноль
def LDefault : L := 0

-- Множество векторов идентификаторов длины n ∈ ℕ₀: Vn ⊆ Lⁿ
def Vn (n : nat) := vector L n

-- Дефолтное значение Vn
def VnDefault (n : nat) : Vn n := vector.repeat LDefault n

-- Множество всех ассоциаций: A = L × Vn
def A (n : nat) := prod L (Vn n)

-- Ассоциативная сеть векторов длины n (или n-мерная асеть) из семейства функций {anetvⁿ : L → Vn}
def ANetVf (n : nat) := L → Vn n
def ANetVl (n : nat) := list (Vn n)

-- Вложенные упорядоченные пары
def NP := list L

notation `[]` := list.nil
notation `[` x `, .. ,` y `]` := list.cons x .. (list.cons y list.nil) ..

-- Ассоциативная сеть вложенных упорядоченных пар: anetl : L → NP
def ANetLf := L → NP
def ANetLl := list NP

-- Дуплет
def D := prod L L

-- Дефолтное значение D: пара из двух LDefault
def DDefault : D := (LDefault, LDefault)

-- Ассоциативная сеть дуплетов (или двумерная асеть): anetd : L → L²
def ANetDf := L → D
def ANetDl := list D
